<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:p="http://www.springframework.org/schema/p"
       xmlns:util="http://www.springframework.org/schema/util" xmlns:aop="http://www.springframework.org/schema/aop"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
      http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
      http://www.springframework.org/schema/context
      http://www.springframework.org/schema/context/spring-context-3.2.xsd
      http://www.springframework.org/schema/util
      http://www.springframework.org/schema/util/spring-util-3.2.xsd
      http://www.springframework.org/schema/aop
      http://www.springframework.org/schema/aop/spring-aop-3.2.xsd">

    <util:properties id="sysProp" location="file:${user.dir}/config/system.properties" />
    <util:properties id="redisProp" location="file:${user.dir}/config/redis.properties" />

    <context:property-placeholder location="file:${user.dir}/config/redis.properties,
        file:${user.dir}/config/jdbc.properties,file:${user.dir}/config/kafka.properties"/>

    <context:component-scan base-package="com.wxx">
        <context:exclude-filter type="annotation" expression="org.springframework.stereotype.Controller" />
    </context:component-scan>
    
    <import resource="spring-redis.xml"/>

    <import resource="kafka/consumer.xml"/>
    <import resource="kafka/producer.xml"/>

    <bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource"
          init-method="init"
          destroy-method="close" >
        <property name="driverClassName" value="${db.driverClassName}"/>
        <property name="url" value="${db.url}"/>
        <property name="username" value="${db.username}"/>
        <property name="password" value="${db.password}"/>
        <!-- 连接池最大使用连接数 -->
        <property name="maxActive" value="${pool.maxActive}"/>
        <!-- 初始化连接大小 -->
        <property name="initialSize" value="${pool.initialSize}"/>
        <!-- 获取连接最大等待时间 -->
        <property name="maxWait" value="${pool.maxWait}"/>
        <!-- 连接池最大空闲 -->
        <property name="maxIdle" value="${pool.maxIdle}"/>
        <!-- 连接池最小空闲 -->
        <property name="minIdle" value="${pool.minIdle}"/>
        <!-- 自动清除无用连接 -->
        <property name="removeAbandoned" value="${pool.removeAbandoned}"/>
        <!-- 清除无用连接的等待时间 -->
        <property name="removeAbandonedTimeout" value="${pool.removeAbandonedTimeout}"/>
        <!-- 连接属性 -->
        <property name="connectionProperties" value="clientEncoding=UTF-8"/>
    </bean>

    <!-- mybatis文件配置，扫描所有mapper文件 -->
    <!-- configLocation为mybatis属性 mapperLocations为所有mapper-->
    <bean id="sqlSessionFactory"
          class="org.mybatis.spring.SqlSessionFactoryBean"
          p:dataSource-ref="dataSource"
          p:configLocation="classpath:mybatis-config.xml"
          p:mapperLocations="classpath*:com/wxx/**/mapper/${db.type}/*.xml"/>

    <!-- spring与mybatis整合配置，扫描所有dao -->
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer"
          p:basePackage="com.wxx.**.dao"
          p:sqlSessionFactoryBeanName="sqlSessionFactory"/>

    <aop:config>
        <!--切入点-->
        <aop:pointcut id="methodPoint" expression="execution(* com.wxx.shop.service.impl.*.*(..)) "/><!--在该切入点使用自定义拦截器-->
        <aop:advisor pointcut-ref="methodPoint" advice-ref="queryGoodsNameCacheInterceptor"/>
    </aop:config>

    <!-- 对数据源进行事务管理 -->
    <bean id="transactionManager"
          class="org.springframework.jdbc.datasource.DataSourceTransactionManager"
          p:dataSource-ref="dataSource"/>
</beans>