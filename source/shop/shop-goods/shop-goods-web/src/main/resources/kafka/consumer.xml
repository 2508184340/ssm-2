<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:int="http://www.springframework.org/schema/integration"
       xmlns:int-kafka="http://www.springframework.org/schema/integration/kafka"
       xsi:schemaLocation="http://www.springframework.org/schema/integration/kafka http://www.springframework.org/schema/integration/kafka/spring-integration-kafka-2.0.xsd
        http://www.springframework.org/schema/integration http://www.springframework.org/schema/integration/spring-integration-4.2.xsd
        http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd">

    <int:channel id="inputFromKafka">
        <int:queue/>
    </int:channel>

    <int-kafka:message-driven-channel-adapter
            id="kafkaListener"
            listener-container="container1"
            auto-startup="true"
            channel="inputFromKafka"/>

    <bean id="container1" class="org.springframework.kafka.listener.KafkaMessageListenerContainer">
        <constructor-arg>
            <bean class="org.springframework.kafka.core.DefaultKafkaConsumerFactory">
                <constructor-arg index="0">
                    <map>
                        <!--更多参数请见org.apache.kafka.clients.consumer.ConsumerConfig -->
                        <entry key="bootstrap.servers" value="${broker.address}" />
                        <!--消费者组的唯一标识-->
                        <entry key="group.id" value="0"/>
                        <!--true时，Consumer会在消费消息后将offset同步到zookeeper，这样当Consumer失败后，新的consumer就能从zookeeper获取最新的offset-->
                        <entry key="enable.auto.commit" value="true"/>
                        <!--将offset自动提交到zookeeper的时间间隔-->
                        <entry key="auto.commit.interval.ms" value="1000"/>
                        <entry key="session.timeout.ms" value="15000"/>
                        <entry key="key.deserializer" value="org.apache.kafka.common.serialization.StringDeserializer"/>
                        <entry key="value.deserializer" value="org.apache.kafka.common.serialization.StringDeserializer"/>
                    </map>
                </constructor-arg>
            </bean>
        </constructor-arg>
        <constructor-arg>
            <bean class="org.springframework.kafka.listener.config.ContainerProperties">
                <!--设置topic-->
                <constructor-arg>
                    <array>
                        <value>goods</value>
                    </array>
                </constructor-arg>
            </bean>
        </constructor-arg>
    </bean>
</beans>